/**
 ******************************************************************************
 * @file           : main.c
 * @author         : Auto-generated by STM32CubeIDE
 * @brief          : Main program body
 ******************************************************************************
 * @attention
 *
 * Copyright (c) 2024 STMicroelectronics.
 * All rights reserved.
 *
 * This software is licensed under terms that can be found in the LICENSE file
 * in the root directory of this software component.
 * If no LICENSE file comes with this software, it is provided AS-IS.
 *
 ******************************************************************************
 */

#include <stdint.h>
#include <stdio.h>
#include "stm32f4xx.h"
#include "system_stm32f4xx.h"

#include "uart.h"
#include "led.h"
#include "switch.h"

#if !defined(__SOFT_FP__) && defined(__ARM_FP)
  #warning "FPU is not initialized, but the project is compiling for an FPU. Please initialize the FPU before use."
#endif

int main(void)
{
	int c=0;
	char s[16];
	SystemInit();
	LedInit(LED_RED);
	LedInit(LED_BLUE);
	UartInit(BAUD_9600);
	SwitchInit(SWITCH);
	while(1) {
		UartPuts("Choose Below bro: \n");
		UartPuts("\r1. Red LED ON\n");
		UartPuts("\r2. Red LED OFF\n");
		UartPuts("\r3. Blue LED ON\n");
		UartPuts("\r4. Blue LED OFF\n");
		UartGets(s);

		sscanf(s,"%d",&c);
		switch(c){
			case 1:	for(int i=0;i<10;i++)
					{
						LedOn(LED_GREEN);
						DelayMs(300);
						LedOn(LED_ORANGE);
						DelayMs(300);
						LedOn(LED_RED);
						DelayMs(300);
						LedOn(LED_BLUE);
						DelayMs(300);

						LedOff(LED_GREEN);
						DelayMs(300);
						LedOff(LED_ORANGE);
						DelayMs(300);
						LedOff(LED_RED);
						DelayMs(300);
						LedOff(LED_BLUE);
						DelayMs(300);
						i++;
					}
			       break;

			case 2:	for(int i=0;i<10;i++)
					{
						LedOn(LED_GREEN);
						DelayMs(300);
						LedOn(LED_RED);
						DelayMs(300);
						LedOn(LED_ORANGE);
						DelayMs(300);
						LedOn(LED_BLUE);
						DelayMs(300);

						LedOff(LED_GREEN);
						DelayMs(300);
						LedOff(LED_RED);
						DelayMs(300);
						LedOff(LED_ORANGE);
						DelayMs(300);
						LedOff(LED_BLUE);
						DelayMs(300);
				i++;
			}
					break;

			case 3:	for(int i=0;i<10;i++)
					{
						LedOn(LED_GREEN);
						LedOn(LED_RED);
						DelayMs(300);

						LedOff(LED_RED);
						LedOff(LED_GREEN);

						LedOn(LED_ORANGE);
						LedOn(LED_BLUE);
						DelayMs(300);

						LedOff(LED_ORANGE);
						LedOff(LED_BLUE);
					}
					break;

			case 4:
				for(int i=0;i<10;i++)
					{
						LedOn(LED_GREEN);
						DelayMs(300);
						LedOn(LED_ORANGE);
						DelayMs(300);

						LedOff(LED_GREEN);
						LedON(LED_RED);
						DelayMs(300);

						LedOff(LED_ORANGE);
						LedOn(LED_BLUE);
						DelayMs(300);

						LedOff(LED_RED);

					}
					break;

		}
	}
	return 0;
}
